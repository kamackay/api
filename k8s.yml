---
apiVersion: v1
kind: Namespace
metadata:
  name: webpage
---
apiVersion: v1
kind: Service
metadata:
  name: webpage-service
  namespace: webpage
spec:
  type: NodePort
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: webpage-service
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: webpage
spec:
  type: NodePort
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: api-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webpage
  namespace: webpage
  labels:
    app: webpage-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webpage-service
  template:
    metadata:
      labels:
        app: webpage-service
    spec:
      restartPolicy: Always
      containers:
        - name: webpage
          image: kamackay/webpage:latest
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: webpage
  labels:
    app: api-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      restartPolicy: Always
      containers:
        - name: api
          image: kamackay/api:latest
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          volumeMounts:
            - name: creds
              mountPath: /api/creds.json
              subPath: creds.json
      volumes:
        - name: creds
          secret:
            secretName: creds
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: webpage-static-ip
    networking.gke.io/managed-certificates: codes-cert, com-cert, rocks-cert
spec:
  rules:
    - host: keith.mackay.codes
      http:
        paths:
          - path: /*
            backend:
              serviceName: webpage-service
              servicePort: 8080
    - host: keithmackay.com
      http:
        paths:
          - path: /*
            backend:
              serviceName: webpage-service
              servicePort: 8080
    - host: keith.mackay.rocks
      http:
        paths:
          - path: /*
            backend:
              serviceName: webpage-service
              servicePort: 8080
    - host: api.keithmackay.com
      http:
        paths:
          - path: /*
            backend:
              serviceName: api-service
              servicePort: 8080
---

