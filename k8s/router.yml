---
apiVersion: v1
kind: Service
metadata:
  name: router
  namespace: webpage
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: router
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: router-config
  namespace: webpage
data:
  nginx.conf: |
    worker_processes auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        gzip  on;

        server {
          listen 80;

          location / {
              proxy_pass http://webpage-service:8080;
          }
        }

        server {
            server_name keith.mackay.codes keithmackay.com;
            listen 80;

            location / {
                proxy_pass http://webpage-service:8080;
            }
        }

        server {
            server_name api.keithmackay.com;
            listen 80;

            location / {
                proxy_pass http://api-service:8080;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: router
  namespace: webpage
  labels:
    app: router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: router
  template:
    metadata:
      labels:
        app: router
    spec:
      restartPolicy: Always
      containers:
        - name: router
          image: nginx:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
          env:
            - name: PORT
              value: "80"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 1
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
          volumeMounts:
            - name: conf-file
              subPath: nginx.conf
              mountPath: /etc/nginx/nginx.conf
      volumes:
        - name: conf-file
          configMap:
            name: router-config
---

